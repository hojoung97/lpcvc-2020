INFO:root:
Started
INFO:root:Image #0

INFO:root:Feature Extraction Layer

INFO:root:
x dimensions: [1, channels, height, width] = torch.Size([1, 126, 224])

INFO:root:
x1 dimensions: [1, channels, height, width] = torch.Size([1, 32, 32, 56])

INFO:root:
f4 dimensions: [1, channels, height, width] = torch.Size([1, 64, 32, 56])

INFO:root:
f3 dimensions: [1, channels, height, width] = torch.Size([1, 128, 16, 28])

INFO:root:
f2 dimensions: [1, channels, height, width] = torch.Size([1, 256, 8, 14])

INFO:root:
f1 dimensions: [1, channels, height, width] = torch.Size([1, 384, 4, 7])

INFO:root:Feature Merging Layer

INFO:root:
Input h1 dimensions: [1, channels, height, width] = torch.Size([1, 384, 4, 7])

INFO:root:torch.Size([1, 640, 8, 14])
INFO:root:
Input h2 dimensions: [1, channels, height, width] = torch.Size([1, 128, 8, 14])

INFO:root:torch.Size([1, 256, 16, 28])
INFO:root:
Input h3 dimensions: [1, channels, height, width] = torch.Size([1, 64, 16, 28])

INFO:root:torch.Size([1, 128, 32, 56])
INFO:root:
Input h4 dimensions: [1, channels, height, width] = torch.Size([1, 32, 32, 56])

INFO:root:
Input h5 dimensions: [1, channels, height, width] = torch.Size([1, 32, 32, 56])

INFO:root:Output Layer

INFO:root:
Input h5 dimensions: [1, channels, height, width] = torch.Size([1, 32, 32, 56])

INFO:root:
Score map dimensions: torch.Size([1, 1, 32, 56])
INFO:root:
Score map: tensor([[[[0.4142, 0.3918, 0.4264,  ..., 0.5544, 0.5129, 0.4743],
          [0.4343, 0.3617, 0.4219,  ..., 0.5373, 0.5350, 0.4959],
          [0.4377, 0.4342, 0.4497,  ..., 0.5646, 0.5525, 0.4960],
          ...,
          [0.4425, 0.4524, 0.4616,  ..., 0.2681, 0.3007, 0.2577],
          [0.4088, 0.4036, 0.3899,  ..., 0.4852, 0.5283, 0.3148],
          [0.3564, 0.3454, 0.3562,  ..., 0.3500, 0.3086, 0.2838]]]],
       grad_fn=<SigmoidBackward>)

INFO:root:
Distance map dimensions: torch.Size([1, 4, 32, 56])

INFO:root:
Angle map dimensions: torch.Size([1, 1, 32, 56])

INFO:root:
Geometry map dimensions: torch.Size([1, 5, 32, 56])
INFO:root:
Geometry map: tensor([[[[ 1.3160e+02,  1.2507e+02,  1.1725e+02,  ...,  1.2613e+02,
            1.3373e+02,  1.2503e+02],
          [ 1.5804e+02,  1.3473e+02,  1.2732e+02,  ...,  1.2247e+02,
            1.2085e+02,  1.2301e+02],
          [ 1.4690e+02,  1.2194e+02,  1.1866e+02,  ...,  1.1773e+02,
            1.1263e+02,  1.2367e+02],
          ...,
          [ 1.1750e+02,  9.5109e+01,  1.0191e+02,  ...,  3.1288e+01,
            3.7841e+01,  4.7690e+01],
          [ 1.1040e+02,  9.2636e+01,  1.0058e+02,  ...,  2.5410e+01,
            3.1951e+01,  4.2732e+01],
          [ 1.2089e+02,  1.0358e+02,  1.0139e+02,  ...,  4.2263e+01,
            4.8738e+01,  5.9183e+01]],

         [[ 1.2276e+02,  1.2091e+02,  1.0516e+02,  ...,  1.1738e+02,
            1.2384e+02,  1.1292e+02],
          [ 9.3529e+01,  1.0907e+02,  7.8735e+01,  ...,  1.2461e+02,
            1.3815e+02,  1.1472e+02],
          [ 8.2536e+01,  1.1722e+02,  1.0629e+02,  ...,  1.3526e+02,
            1.3872e+02,  1.1881e+02],
          ...,
          [ 1.0521e+02,  1.0963e+02,  1.0067e+02,  ...,  1.4107e+02,
            1.3431e+02,  1.0088e+02],
          [ 1.1265e+02,  1.1622e+02,  1.0555e+02,  ...,  1.5816e+02,
            1.3683e+02,  1.2393e+02],
          [ 1.0513e+02,  1.0566e+02,  8.9573e+01,  ...,  1.5735e+02,
            1.3416e+02,  1.2218e+02]],

         [[ 1.2688e+02,  1.3342e+02,  1.4451e+02,  ...,  1.3278e+02,
            1.3017e+02,  1.3458e+02],
          [ 1.3869e+02,  1.3463e+02,  1.2017e+02,  ...,  1.3197e+02,
            1.3650e+02,  1.3406e+02],
          [ 1.3507e+02,  1.3478e+02,  1.2995e+02,  ...,  1.2592e+02,
            1.2848e+02,  1.3330e+02],
          ...,
          [ 1.3989e+02,  1.3447e+02,  1.4722e+02,  ...,  1.6818e+02,
            1.7463e+02,  1.7007e+02],
          [ 1.5091e+02,  1.4862e+02,  1.5108e+02,  ...,  1.7356e+02,
            1.4011e+02,  1.2953e+02],
          [ 1.5037e+02,  1.3807e+02,  1.4381e+02,  ...,  1.4373e+02,
            1.3106e+02,  9.4192e+01]],

         [[ 1.3271e+02,  1.3037e+02,  1.1921e+02,  ...,  1.2048e+02,
            1.2535e+02,  1.3142e+02],
          [ 1.2755e+02,  1.4482e+02,  1.3514e+02,  ...,  1.1892e+02,
            1.2440e+02,  1.3653e+02],
          [ 1.2750e+02,  1.3345e+02,  1.3764e+02,  ...,  1.1998e+02,
            1.3852e+02,  1.3658e+02],
          ...,
          [ 1.3248e+02,  1.2125e+02,  1.2295e+02,  ...,  1.5069e+02,
            1.1251e+02,  1.1330e+02],
          [ 1.4274e+02,  1.3802e+02,  1.3598e+02,  ...,  1.4294e+02,
            1.1819e+02,  1.4249e+02],
          [ 1.5286e+02,  1.5076e+02,  1.4042e+02,  ...,  1.3628e+02,
            1.5674e+02,  1.7601e+02]],

         [[-5.8022e-03,  2.8149e-01,  4.3400e-01,  ..., -4.5191e-02,
           -1.1262e-02, -9.2672e-02],
          [ 2.5225e-01,  3.8819e-01,  5.2449e-01,  ..., -1.9493e-02,
            8.0813e-02, -1.1934e-01],
          [-4.5478e-02,  2.1102e-01,  1.4092e-01,  ..., -5.6439e-02,
           -4.4355e-02, -1.0277e-01],
          ...,
          [-1.2162e-01,  4.0862e-02,  3.2704e-02,  ..., -2.7150e-01,
            4.0845e-01,  6.3406e-01],
          [-1.8454e-01, -1.0255e-01, -1.1591e-01,  ..., -1.1413e-01,
           -1.6191e-01,  1.9056e-01],
          [-2.2516e-01, -3.1710e-01, -3.5426e-01,  ..., -1.0108e-01,
           -4.0983e-01, -4.4823e-01]]]], grad_fn=<CatBackward>)

INFO:root:
Range of values in geometry map: (-1.0514552593231201, 214.67410278320312)

INFO:root:-------------------------------------------------
INFO:root:Image #1

INFO:root:Feature Extraction Layer

INFO:root:
x dimensions: [1, channels, height, width] = torch.Size([1, 126, 224])

INFO:root:
x1 dimensions: [1, channels, height, width] = torch.Size([1, 32, 32, 56])

INFO:root:
f4 dimensions: [1, channels, height, width] = torch.Size([1, 64, 32, 56])

INFO:root:
f3 dimensions: [1, channels, height, width] = torch.Size([1, 128, 16, 28])

INFO:root:
f2 dimensions: [1, channels, height, width] = torch.Size([1, 256, 8, 14])

INFO:root:
f1 dimensions: [1, channels, height, width] = torch.Size([1, 384, 4, 7])

INFO:root:Feature Merging Layer

INFO:root:
Input h1 dimensions: [1, channels, height, width] = torch.Size([1, 384, 4, 7])

INFO:root:torch.Size([1, 640, 8, 14])
INFO:root:
Input h2 dimensions: [1, channels, height, width] = torch.Size([1, 128, 8, 14])

INFO:root:torch.Size([1, 256, 16, 28])
INFO:root:
Input h3 dimensions: [1, channels, height, width] = torch.Size([1, 64, 16, 28])

INFO:root:torch.Size([1, 128, 32, 56])
INFO:root:
Input h4 dimensions: [1, channels, height, width] = torch.Size([1, 32, 32, 56])

INFO:root:
Input h5 dimensions: [1, channels, height, width] = torch.Size([1, 32, 32, 56])

INFO:root:Output Layer

INFO:root:
Input h5 dimensions: [1, channels, height, width] = torch.Size([1, 32, 32, 56])

INFO:root:
Score map dimensions: torch.Size([1, 1, 32, 56])
INFO:root:
Score map: tensor([[[[0.4693, 0.4884, 0.5171,  ..., 0.4708, 0.4956, 0.4146],
          [0.4515, 0.5127, 0.3620,  ..., 0.4384, 0.4680, 0.4488],
          [0.4727, 0.4931, 0.4204,  ..., 0.4166, 0.4792, 0.4848],
          ...,
          [0.4481, 0.5308, 0.4742,  ..., 0.4973, 0.4868, 0.5268],
          [0.3957, 0.5079, 0.3942,  ..., 0.4996, 0.4926, 0.5098],
          [0.3789, 0.3556, 0.2892,  ..., 0.3734, 0.3580, 0.4492]]]],
       grad_fn=<SigmoidBackward>)

INFO:root:
Distance map dimensions: torch.Size([1, 4, 32, 56])

INFO:root:
Angle map dimensions: torch.Size([1, 1, 32, 56])

INFO:root:
Geometry map dimensions: torch.Size([1, 5, 32, 56])
INFO:root:
Geometry map: tensor([[[[ 1.3734e+02,  1.2771e+02,  1.0965e+02,  ...,  1.1425e+02,
            1.2272e+02,  1.2314e+02],
          [ 1.3093e+02,  9.7421e+01,  9.5518e+01,  ...,  1.2978e+02,
            1.3557e+02,  1.3303e+02],
          [ 1.2871e+02,  1.1342e+02,  1.0957e+02,  ...,  1.2819e+02,
            1.2169e+02,  1.2163e+02],
          ...,
          [ 1.1890e+02,  9.1772e+01,  9.6902e+01,  ...,  1.0936e+02,
            1.1366e+02,  1.1823e+02],
          [ 1.1501e+02,  8.9216e+01,  9.3425e+01,  ...,  1.0994e+02,
            1.1355e+02,  1.3105e+02],
          [ 1.2251e+02,  8.7959e+01,  8.4238e+01,  ...,  1.0654e+02,
            1.1648e+02,  1.2397e+02]],

         [[ 1.2119e+02,  1.0935e+02,  1.1244e+02,  ...,  1.0163e+02,
            1.2120e+02,  1.0264e+02],
          [ 1.1678e+02,  1.1920e+02,  1.2162e+02,  ...,  1.0265e+02,
            1.1335e+02,  1.0227e+02],
          [ 1.2197e+02,  1.0840e+02,  1.1076e+02,  ...,  1.0928e+02,
            1.1604e+02,  1.0211e+02],
          ...,
          [ 1.3302e+02,  1.5023e+02,  1.4441e+02,  ...,  1.2182e+02,
            1.2112e+02,  1.0746e+02],
          [ 1.3032e+02,  1.3957e+02,  1.3332e+02,  ...,  1.3123e+02,
            1.2127e+02,  1.1248e+02],
          [ 1.2174e+02,  1.2921e+02,  1.2391e+02,  ...,  1.0700e+02,
            1.1088e+02,  1.1181e+02]],

         [[ 1.2994e+02,  1.2463e+02,  1.2916e+02,  ...,  1.4936e+02,
            1.3795e+02,  1.4615e+02],
          [ 1.4262e+02,  1.3523e+02,  1.3091e+02,  ...,  1.4674e+02,
            1.3759e+02,  1.3904e+02],
          [ 1.3452e+02,  1.2082e+02,  1.4654e+02,  ...,  1.5717e+02,
            1.3501e+02,  1.4833e+02],
          ...,
          [ 1.2745e+02,  1.3553e+02,  1.4232e+02,  ...,  1.4099e+02,
            1.3441e+02,  1.4228e+02],
          [ 1.3794e+02,  1.3440e+02,  1.3616e+02,  ...,  1.3429e+02,
            1.3633e+02,  1.4135e+02],
          [ 1.5337e+02,  1.4062e+02,  1.3386e+02,  ...,  1.2782e+02,
            1.3548e+02,  1.3091e+02]],

         [[ 1.1795e+02,  1.2188e+02,  1.2960e+02,  ...,  1.1819e+02,
            1.2379e+02,  1.2232e+02],
          [ 1.2515e+02,  1.3086e+02,  1.4969e+02,  ...,  1.1284e+02,
            1.1284e+02,  1.2161e+02],
          [ 1.1417e+02,  1.4027e+02,  1.4225e+02,  ...,  1.2385e+02,
            1.2248e+02,  1.3385e+02],
          ...,
          [ 1.3604e+02,  1.2118e+02,  1.3651e+02,  ...,  1.1387e+02,
            1.2605e+02,  1.1144e+02],
          [ 1.4416e+02,  1.4035e+02,  1.5205e+02,  ...,  1.1262e+02,
            1.2744e+02,  1.1483e+02],
          [ 1.4147e+02,  1.5089e+02,  1.5017e+02,  ...,  1.2899e+02,
            1.3422e+02,  1.2206e+02]],

         [[-5.6632e-02, -1.8658e-02,  1.5331e-01,  ...,  3.5270e-01,
            2.9178e-01,  1.3777e-01],
          [ 6.7477e-02,  9.2279e-04,  2.1647e-01,  ...,  4.8024e-01,
            4.1488e-01,  2.2061e-01],
          [-9.5542e-02, -1.5030e-01,  7.9495e-02,  ...,  4.1376e-01,
            3.1209e-01,  1.5398e-01],
          ...,
          [-9.8108e-02,  1.3343e-01, -7.1061e-02,  ...,  2.5899e-01,
            3.4165e-02, -3.6526e-02],
          [-2.4256e-02, -1.9058e-02, -2.0427e-01,  ...,  1.8151e-01,
           -8.0899e-02, -6.0603e-02],
          [ 1.1116e-02, -1.5171e-01, -1.1498e-01,  ..., -6.4557e-02,
           -2.7886e-02, -1.6558e-01]]]], grad_fn=<CatBackward>)

INFO:root:
Range of values in geometry map: (-0.9174967408180237, 230.76840209960938)

INFO:root:-------------------------------------------------
INFO:root:Finished

